# automatically generated by the FlatBuffers compiler, do not modify

# namespace: BaBLE

import flatbuffers

class ProbeCharacteristics(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsProbeCharacteristics(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ProbeCharacteristics()
        x.Init(buf, n + offset)
        return x

    # ProbeCharacteristics
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ProbeCharacteristics
    def ConnectionHandle(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # ProbeCharacteristics
    def StartHandle(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 1

    # ProbeCharacteristics
    def EndHandle(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 65535

    # ProbeCharacteristics
    def Characteristics(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 4
            x = self._tab.Indirect(x)
            from .Characteristic import Characteristic
            obj = Characteristic()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # ProbeCharacteristics
    def CharacteristicsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

def ProbeCharacteristicsStart(builder): builder.StartObject(4)
def ProbeCharacteristicsAddConnectionHandle(builder, connectionHandle): builder.PrependUint16Slot(0, connectionHandle, 0)
def ProbeCharacteristicsAddStartHandle(builder, startHandle): builder.PrependUint16Slot(1, startHandle, 1)
def ProbeCharacteristicsAddEndHandle(builder, endHandle): builder.PrependUint16Slot(2, endHandle, 65535)
def ProbeCharacteristicsAddCharacteristics(builder, characteristics): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(characteristics), 0)
def ProbeCharacteristicsStartCharacteristicsVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def ProbeCharacteristicsEnd(builder): return builder.EndObject()
